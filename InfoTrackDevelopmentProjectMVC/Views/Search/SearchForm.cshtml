@model InfoTrackDevelopmentProjectMVC.Models.SearchQueryModel

@{
    ViewData["Title"] = "SearchForm";
}

<h1>Search Form</h1>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="SearchForm" id="SearchFormQuery">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Keywords" class="control-label"></label>
                <input asp-for="Keywords" class="form-control" />
                <span asp-validation-for="Keywords" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Url" class="control-label"></label>
                <input asp-for="Url" class="form-control" />
                <span asp-validation-for="Url" class="text-danger"></span>
            </div>
            <div class="form-group">
                <br />
                <input type="submit" id="submitButton" value="Submit" class="btn btn-primary" />
                <div class="spinner-border" id="submitSpinner" style="display:none;"></div>
            </div>
        </form>
    </div>
</div>
@section Scripts {
    <script>
        var ele = document.getElementById("SearchFormQuery");
        if(ele.addEventListener){
            ele.addEventListener("submit", formSubmitted, false);  //Modern browsers
        }else if(ele.attachEvent){
            ele.attachEvent('onsubmit', formSubmitted);            //Old IE
        }
        function formSubmitted(){
            if ($('#SearchFormQuery').valid()) {
                $("#submitButton").attr('disabled', 'disabled');
                $("#submitButton").hide();
                $("#submitSpinner").show();
            }
            
        }
    </script>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
